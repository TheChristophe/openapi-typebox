{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:eslint-comments/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    },
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "github", "import", "prefer-arrow-functions", "unused-imports"],
  "rules": {
    "@typescript-eslint/ban-ts-comment": "warn",
    "curly": "error",
    "quotes": [
      "warn",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "prefer-template": "warn",
    "eqeqeq": ["warn", "smart"],
    "no-lonely-if": "warn",
    "no-multi-assign": "warn",
    "@typescript-eslint/no-shadow": "warn",
    "no-useless-return": "warn",
    "no-useless-rename": "warn",
    "one-var-declaration-per-line": "warn",
    "prefer-object-spread": "warn",
    "no-unreachable-loop": "warn",
    "no-template-curly-in-string": "warn",
    "default-case-last": "warn",
    "no-array-constructor": "warn",
    "no-else-return": "warn",
    "array-callback-return": "warn",
    "@typescript-eslint/consistent-type-definitions": ["warn", "type"],

    "import/first": "error",
    "import/no-absolute-path": "error",
    "import/no-duplicates": "error",

    "import/consistent-type-specifier-style": ["error", "prefer-inline"],
    "import/prefer-default-export": ["warn"],

    "prefer-arrow-functions/prefer-arrow-functions": [
      "warn",
      {
        "allowNamedFunctions": false,
        "classPropertiesAllowed": false,
        "disallowPrototype": false,
        "returnStyle": "unchanged",
        "singleReturnOnly": false
      }
    ],

    // vs plugin:@typescript-eslint/strict-type-checked
    "@typescript-eslint/no-confusing-void-expression": "off", // inconvenient
    "@typescript-eslint/no-floating-promises": "off", // used on for event handlers
    "@typescript-eslint/no-misused-promises": "off", // used on for event handlers
    "@typescript-eslint/unbound-method": "off", // conflicts with api clients

    "no-console": "off",
    "@typescript-eslint/no-unused-vars": 1,
    "unused-imports/no-unused-imports": 2,

    // broken?
    "@typescript-eslint/consistent-type-imports": "off"
  }
}
